name: Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y llvm llvm-dev libllvm-14 python3-lldb-14 libgdal-dev
      
      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: conda-forge
      
      - name: Install GDAL and other conda dependencies
        shell: bash -l {0}
        run: |
          conda install -c conda-forge gdal llvmlite numba
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: true
          virtualenvs-in-project: true
      
      - name: Configure Poetry
        shell: bash -l {0}
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
      
      - name: Clean poetry lock
        shell: bash -l {0}
        run: |
          rm -f poetry.lock
      
      - name: Generate new lock file
        shell: bash -l {0}
        run: |
          poetry lock --no-update
      
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          poetry install --with dev --no-interaction
      
      - name: Run tests with coverage
        shell: bash -l {0}
        run: |
          poetry run pytest --cov=voxcity --cov-report=xml
      
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true